// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repo/repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/ozonva/ova-rule-api/internal/models"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AddRules mocks base method.
func (m *MockRepo) AddRules(rules []models.Rule) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddRules", rules)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddRules indicates an expected call of AddRules.
func (mr *MockRepoMockRecorder) AddRules(rules interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRules", reflect.TypeOf((*MockRepo)(nil).AddRules), rules)
}

// DescribeRule mocks base method.
func (m *MockRepo) DescribeRule(ruleID uint64) (*models.Rule, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DescribeRule", ruleID)
	ret0, _ := ret[0].(*models.Rule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeRule indicates an expected call of DescribeRule.
func (mr *MockRepoMockRecorder) DescribeRule(ruleID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DescribeRule", reflect.TypeOf((*MockRepo)(nil).DescribeRule), ruleID)
}

// ListRules mocks base method.
func (m *MockRepo) ListRules(limit, offset uint64) ([]models.Rule, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRules", limit, offset)
	ret0, _ := ret[0].([]models.Rule)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRules indicates an expected call of ListRules.
func (mr *MockRepoMockRecorder) ListRules(limit, offset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRules", reflect.TypeOf((*MockRepo)(nil).ListRules), limit, offset)
}

// RemoveRule mocks base method.
func (m *MockRepo) RemoveRule(ruleID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveRule", ruleID)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveRule indicates an expected call of RemoveRule.
func (mr *MockRepoMockRecorder) RemoveRule(ruleID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveRule", reflect.TypeOf((*MockRepo)(nil).RemoveRule), ruleID)
}
